# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=5000
HISTFILESIZE=5000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# _trunc_pwd truncates the value of pwd into a new variable
# called newPWD if length is above a certain limit
_trunc_pwd() {
# How many characters of the $PWD should be kept
	local pwdmaxlen=30
# use '~' instead of full path for homedir
	local shortPWD="${PWD/$HOME/~}"
# Indicator that there has been directory truncation:
	local trunc_symbol="[...]"
	if [ ${#shortPWD} -gt $pwdmaxlen ] ; then
		local pwdoffset=$(( ${#shortPWD} - $pwdmaxlen ))
		newPWD="${trunc_symbol}${shortPWD:$pwdoffset:$pwdmaxlen}"
	else
		newPWD=${shortPWD}
	fi
}

# define color shorthands
blw='\[\033[00m\]'     # black-white
grn='\[\033[0;32m\]'   # normal green
red='\[\033[31m\]'     # red
bgrn='\[\033[01;32m\]' # bold green
bylw='\[\033[01;33m\]' # bold yellow
bblu='\[\033[01;34m\]' # bold blue

# schroot struggles with TERM-settings in a screen-session, so:
if [ -n "$debian_chroot" ] && [ "$TERM" == "screen.rxvt" ] ; then
	export TERM="screen"
fi

# set a prefix if we're inside a screen since old screen-versions (or
# non-ubuntu ones) can't be easily distinguished from a regular session
[ "$TERM" == "screen" ] && _PFX="$bylw[S]$blw"

# red hostname if we're on SSH (doesn't work for dropbear):
if [ -n "$SSH_TTY" ] ; then
	host_dir=$red'@\h'$blw':'$bblu'$newPWD'$blw'\$ '
else
	host_dir=$bgrn'@\h'$blw':'$bblu'$newPWD'$blw'\$ '
fi

if [ "$color_prompt" = yes ]; then
	PS1=${_PFX}${red}'${debian_chroot:+($debian_chroot)}'$grn'\u'$blw${host_dir}
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
fi
unset color_prompt force_color_prompt
unset host_dir blw grn red bgrn bylw bblu

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
	PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"
					_trunc_pwd'
	;;
*)
	PROMPT_COMMAND='_trunc_pwd'
	;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

#set bell-style none
xset b off &> /dev/null

# function definitions
if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi

export HOSTTYPE # required by many devel-tools
export LANG=
